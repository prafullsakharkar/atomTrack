$("#selectObject").change(function(){

    var obj_name = $("#selectObject").val();
    var type_select = $("#selectType").val();
    prev_div = '#div_'+type_select+'_checkbox';
    $(prev_div).css({'display':'none'});

    reset_object()

    var proj_id = $('#selectProject').val();
    if (!proj_id){
        alert("Please select valid project !!")
        return null
    }

    var div_check = '';
    if (obj_name == 'Sequence'){
        $("#div_shot_task_checkbox").css({'display':'block'});
        div_check = '#div_shot_task_checkbox';
        create_table(div_check);
        load_obj_name(obj_name,'');
    }else if (obj_name == 'Asset Build'){
        $("#div_shot_task_checkbox").css({'display':'none'});
        load_types()
    }else{
        return null
    }

});

// sequence box
$('#selectSequence').on('change', function(evt, params) {

//    remove_rows("#tbl_task");
    $('#all_shots').attr('checked',false);
    var obj_name = $("#selectObject").val();
    if (!obj_name){
        alert("Please select valid Object !!")
        return null
    }
    var deselectedValue = params.deselected;
    var selectedValue = params.selected;

    if (selectedValue){
        var obj_name = 'Shot';
        load_obj_name(obj_name,selectedValue);
    }else if (deselectedValue){
        de_seq = $("#selectSequence option[value='"+deselectedValue+"']").text();
        $("#selectShot option:contains('"+de_seq+"')").remove();
        $("#selectShot").trigger("chosen:updated");
        $("#selectShot").trigger("liszt:updated");
        $("#tbl_task tr:contains("+ de_seq +")").remove();
    }
});
(function () {
    var toggle_selection1=0;
    var toggle_selection2=0;
//Menu Navigator
$('a.toggle_right').click(function () {
    if(toggle_selection2==1){
        $("#panel_big").css({"width":"80%"});}
    else{
    $("#panel_big").css({"width":"89%"});}
        $("#toggle_right").css({"display":"none"});
        $("#toggle_left").css({"display":"block"});
    $("#task_menu1").css({"display":"block"});
    toggle_selection1=1;
    });
$('a.toggle_left').click(function () {
    if(toggle_selection2==1){
        $("#panel_big").css({"width":"89%"});}
    else{
        $("#panel_big").css({"width":"100%"});}
        $("#toggle_left").css({"display":"none"});
        $("#toggle_right").css({"display":"block"});
    $("#task_menu1").css({"display":"none"});
    toggle_selection1=0;
    });

// Task status navigator
$('a.toggle_task_right').click(function () {
    if(toggle_selection1==1){
        $("#panel_big").css({"width":"89%"});}
    else{
        $("#panel_big").css({"width":"98%"});}
        $("#toggle_task_right").css({"display":"none"});
        $("#toggle_task_left").css({"display":"block"});
        $("#task_menu").css({"display":"none"});
    toggle_selection2=0;
    });
$('a.toggle_task_left').click(function () {
    if(toggle_selection1==1){
        $("#panel_big").css({"width":"80%"});}
    else{
    $("#panel_big").css({"width":"89%"});}
        $("#toggle_task_left").css({"display":"none"});
        $("#toggle_task_right").css({"display":"block"});
        $("#task_menu").css({"display":"block"});
    toggle_selection2=1;
    });
    

})();



(function () {
    var previous;

    $("#selectType").focus(function () {
        previous = this.value;
    }).change(function() {
    remove_rows("#tbl_task");
    $('#all_assets').attr('checked',false);
    var obj_name = $("#selectObject").val();
    if (!obj_name){
        alert("Please select valid Object !!")
        return null
    }
   
    var select_type = $("#selectType").val();

    div_check = '#div_'+select_type+'_checkbox';
    prev_div = '#div_'+previous+'_checkbox';
    $(prev_div).css({'display':'none'});
    $(div_check).css({'display':'block'});
    create_table(div_check);

    if (select_type){
        load_obj_name(obj_name,'');
    }else{
        $("#selectAsset").empty();
        $("#selectAsset").trigger("chosen:updated");
        $("#selectAsset").trigger("liszt:updated");
        $("#div_asset_name").css({'display':'none'});
    }
    previous = this.value;
    });
})();

$('#selectShot').on('change', function(evt, params) {
    var proj_id = $('#selectProject').val();
    if (!proj_id){
        alert("Please select valid project !!");
        return null;
    }
    var deselectedValue = params.deselected;
    var selectedValue = params.selected;

    if (selectedValue){
        var array = [];
        array[0] = selectedValue
        load_tasks(array);
    }else if (deselectedValue){
        var shot_name = $("#selectShot option[value='"+deselectedValue+"']").text();
        $("#tbl_task tr:contains("+ shot_name +")").remove();
    }
});


$("#selectAsset").on('change', function(evt, params) {

    var proj_id = $('#selectProject').val();
    if (!proj_id){
        alert("Please select valid project !!");
        return null;
    }
    var deselectedValue = params.deselected;
    var selectedValue = params.selected;

    if (selectedValue){
        var array = [];
        array[0] = selectedValue
        load_tasks(array);
    }else if (deselectedValue){
        var asset_name = $("#selectAsset option[value='"+deselectedValue+"']").text();
        $("#tbl_task tr:contains("+ asset_name +")").remove();
    }
});

function remove_rows(tablename) { 
    $(tablename).find("tr:gt(0)").remove();        
}

function reset_object(){

    $('#all_assets').attr('checked',false);
    $('#all_shots').attr('checked',false);

    $("#selectSequence").empty();
    $("#selectSequence").trigger("chosen:updated");
    $("#selectSequence").trigger("liszt:updated");
    $("#div_sequence_name").css({'display':'none'});

    $("#selectType").empty();
    $("#selectType").trigger("chosen:updated");
    $("#selectType").trigger("liszt:updated");
    $("#div_type_name").css({'display':'none'});

    $("#selectShot").empty();
    $("#selectShot").trigger("chosen:updated");
    $("#selectShot").trigger("liszt:updated");
    $("#div_shot_name").css({'display':'none'});

    $("#selectAsset").empty();
    $("#selectAsset").trigger("chosen:updated");
    $("#selectAsset").trigger("liszt:updated");
    $("#div_asset_name").css({'display':'none'});

    remove_rows('#tbl_task');
}

function load_types(){
    $select_elem = $("#selectType");
    $select_elem.empty();
    $("#div_type_name").css({'display':'block'});

    $select_elem.append('<option value="">Select Type</option>');
    $select_elem.append('<option value="Set">Set</option>');
    $select_elem.append('<option value="Prop">Prop</option>');
    $select_elem.append('<option value="Character">Character</option>');
    $select_elem.append('<option value="Vehicle">Vehicle</option>');
    $select_elem.append('<option value="Environment">Environment</option>');

    $select_elem.trigger("chosen:updated");
    $select_elem.trigger("liszt:updated");
    $select_elem.data("chosen").destroy().chosen();
}

function load_obj_name(obj_name,parent_id) {

    var project = $('#selectProject').val();
    if (!project){
        alert("Please select valid project !!")
        return null
    }

    var select_type = ''
    var $div_name = ''
    var $select_elem = ''
    var task_name = ''
    var status_name = ''

    if (obj_name == 'Sequence'){
        $select_elem = $("#selectSequence");
        $div_name = $("#div_sequence_name")
    }else if (obj_name == 'Asset Build'){
        $select_elem = $("#selectAsset");
        $div_name = $("#div_asset_name")
        select_type = $("#selectType").val();
    }else if (obj_name == 'Shot'){
        $select_elem = $("#selectShot");
        $div_name = $("#div_shot_name")
    }else if (obj_name == 'FtpSequence'){
        $select_elem = $("#selectFtpSequence");
        $div_name = $("#div_ftp_sequence_name");
	obj_name = 'Sequence';
    }else if (obj_name == 'FtpShot'){
        $select_elem = $("#selectFtpShot");
        $div_name = $("#div_shot_name");
	task_name = $("#selectFtpDepartment").val();
	status_name = $("#selectFtpStatus").val();
    }else{
        return null
    }

    $.ajax({
        type:"POST",
        url:"/callajax/",
        data: { 'proj_id': project ,'object_name': obj_name , 'object_type' : select_type, 'parent_id' : parent_id, 'task_name': task_name, 'status_name': status_name},
        beforeSend: function(){
            if (!(parent_id)){
                $select_elem.empty(); 
            }
        },
        success: function(json){
            $div_name.css({'display':'block'});
            $.each(json, function (idx, obj) {
                if(parent_id){
                    $select_elem.append('<option value="'+obj.id+'">'+obj.parent_name+'_'+obj.name+'</option>');
                }else{
                    $select_elem.append('<option value="'+obj.id+'">' + obj.name + '</option>');
                }
            });
            $select_elem.trigger("chosen:updated");
            $select_elem.trigger("liszt:updated");
            $select_elem.data("chosen").destroy().chosen();
        },
        error: function(error){
            console.log("Error:");
            console.log(error);
        }
    });
}

function load_task(proj_id,parent_id,parent_name) {
    var mycol = [];
    var mycolusers = [];
    var task_id = [];
    $.ajax({
        type:"POST",
        url:"/callajax/",
        data: { 'proj_id': proj_id ,'object_name': 'Task', 'parent_id': parent_id },
        beforeSend: function(){
        },
        success: function(json){
            $("#div_task_details").css({'display':'block'});
            mycol[0] = parent_name;
            $.each(json, function (idx, obj) {
                $('#tbl_task th').each(function(index) { 
                    var task_name = this.innerHTML;
                    if (obj.name == task_name){
                        task_id[index] = obj.id; 
                        mycol[index] = obj.status; 
                        mycolusers[index] = obj.users; 
                    }
                });
            });
            add_rows(mycol,parent_id,mycolusers,task_id);
        },
        error: function(error){
            console.log("Error:");
            console.log(error);
        }
    });
}
function add_rows(mycol,parent_id,mycolusers,task_id){

    var obj_name = $("#selectObject").val();
    var table = $('#tbl_task tbody');
    row = $(table[0].insertRow(-1));
    $('#tbl_task th').each(function(index) { 
        var th_name = $(this).text();
        var t_status = '---';
        var stat_lbl = 'label-default';
        var t_stat_user = '---';
        var stat_usr_lbl = 'label-default';
        var taskid = ''
        if(mycol[index]){
            t_status = mycol[index];
            label = mycol[index].replace(/ /g,"_").toLowerCase();
            stat_lbl = 'label-'+label;
        }
	
        if(mycolusers[index]){
            t_stat_user = mycolusers[index];
            stat_usr_lbl = 'label-default';
        }

        if(task_id[index]){
            taskid = task_id[index];
        }

        on_click_status = "";
        on_click_user = "";
        if (index > 0){
            if($(this).css('display') == 'none'){
                show = "style='display:none'";
            }else{
                show = "";
                var header = this.innerHTML;
                col_arr = $('#user_columns').val().split(',');
                if (col_arr.indexOf(header) > -1){ 
                    on_click_status = "ondblclick='editCell(this)'";
                    on_click_user = "ondblclick='editUserCell(this)'";
                }
            }

            var stat_display = ''
            var assi_display = ''
            if(show == ''){
                if($('#show_assignee').is(":not(:checked)")){
                    assi_display = 'style="display:none"';
                }
                if($('#show_status').is(":not(:checked)")){
                    stat_display = 'style="display:none"';
                }
            }

            var cell = $("<td title='"+th_name+"' data-task-id='"+taskid+"' data-org-val='"+t_status+"' data-id='show_status' "+show+" "+stat_display+" "+on_click_status+" />");
/*
            if(t_status == '---'){
                cell = $("<td title='"+th_name+"' data-task-id='"+taskid+"' data-org-val='"+t_status+"' data-id='show_status' "+show+" "+stat_display+" />");
            }
*/
            col_data = '<span class="label '+stat_lbl+'" >'+t_status+'</span>';

            var usercell = $("<td title='"+th_name+"' data-task-id='"+taskid+"' data-org-val='"+t_stat_user+"' data-id='show_assignee' "+show+" "+assi_display+" "+on_click_user+" />");
            usercol_data = '<span class="label '+stat_usr_lbl+'" >'+t_stat_user+'</span>';
        }else{
            var cell = $("<td id='"+parent_id+"'/>");
            col_data = '<span class="label" >'+t_status+'</span>';

            var usercell = $("<span />");
            usercol_data = '';
        }

        
        cell.html(col_data); 
        usercell.html(usercol_data);

        th_id = $(this).attr("class");
        if ($('#' + th_id).is(":not(:checked)")){
            cell.css({'display':'none'});
        }
        row.append(cell,usercell);
    });

    $(row).click(function(event){
        if(event.ctrlKey === true) {
            $(this).toggleClass("selected")
        }
    });
}
function create_table(div_check) {

    var table = $('<table class="table-hover table-condensed table-bordered" id="tbl_task" />');

    thead = $('<thead />');
    tbody = $('<tbody />');

    var row = $(thead[0].insertRow(-1));

//    var headerCell = $('<th />');
    var headerCell = $('<th name="Name" onclick="sortOrder(this)" colspan="2" title="Double Click to sort"/>');
    var header = 'Name';
            
    headerCell.html('<i class="glyphicon glyphicon-sort-by-alphabet"></i>&nbsp;'+header);
    row.append(headerCell);

    col_val = $('#user_columns').val();
    col_arr = col_val.split(',');

    $(div_check+' input[type="checkbox"]').each(function() {
        if($.contains(document, this)){
            var header = this.value;
            if (col_arr.indexOf(header) > -1){
                this.checked = true;
                show = "";
            }else{
                this.checked = false;
                show = "style='display:none'";
            }

            var class_id = $(this).attr('id');
            var headerCell = $('<th name="'+header+'" class="'+class_id+'" '+show+' colspan="2"/>');
            
            headerCell.html(header);
            row.append(headerCell);
        }
    });

    table.append(thead);
    table.append(tbody);

    var dvTable = $("#div_task_details");
    dvTable.html("");
    dvTable.append(table);

    $(div_check+' input[type="checkbox"]').click(function() {
        var index = $(this).attr('id').match(/\d+/)[0];
        var index2 = index--;
        $('#tbl_task tr').each(function() { 
            if($('#show_assignee').is(":checked")){
                $('td:eq(' + index2 + ')',this).toggle();
            }
            if($('#show_status').is(":checked")){
                $('td:eq(' + index + ')',this).toggle();
            }
        });
        if($('#show_assignee').is(":checked") && $('#show_status').is(":checked")){
            $('th.' + $(this).attr('id')).attr('colspan','2');
        }else{
            $('th.' + $(this).attr('id')).attr('colspan','1');
        }
        $('th.' + $(this).attr('id')).toggle();
    });

}

$('#div_elements_checkbox input[type="checkbox"]').each(function() {
    this.checked = true;
});

$('#div_elements_checkbox input[type="checkbox"]').click(function() {
    var id = $(this).attr('id');
    var checked = this.checked;
    $('#tbl_task td').each(function() { 
        td_idx = $(this).index();
        var td_id = $(this).attr('data-id');
        var title = $(this).attr('title');
        if (td_id == id){
            if ($('#tbl_task th[name="'+title+'"]').css('display') != 'none'){
                if (checked){
                    if((id=='show_status' && $('#show_assignee').is(":checked")) || (id=='show_assignee' && $('#show_status').is(":checked"))){
                        $('#tbl_task th[name="'+title+'"]').attr('colspan','2');
                    }
                    $(this).show();
                }else{
                    $('#tbl_task th[name="'+title+'"]').attr('colspan','1');
                    $(this).hide();
                }
            }
        }
    });
});

$("#all_shots").click(function(){
    if (this.checked){
        $('#selectShot option').prop('selected', true);
    }else{
        $('#selectShot option').prop('selected', false);
    }
    $('#selectShot').trigger('chosen:updated');
    reload_tasks();

});

$("#all_assets").click(function(){
    if (this.checked){
        $('#selectAsset option').prop('selected', true);
    }else{
        $('#selectAsset option').prop('selected', false);
    }
    $('#selectAsset').trigger('chosen:updated');
    reload_tasks();
});

$("#all_ftp_shots").click(function(){
    if (this.checked){
        $('#selectFtpShot option').prop('selected', true);
    }else{
        $('#selectFtpShot option').prop('selected', false);
    }
    $('#selectFtpShot').trigger('chosen:updated');

});
function reload_tasks(reload){
    
    var proj_id = $('#selectProject').val();
    var asset_ids = $('#selectAsset').val();
    var shot_ids = $('#selectShot').val();
    var seq_ids = $('#selectSequence').val();

    remove_rows("#tbl_task");
    if (asset_ids){
        pparent_ids = [proj_id]
        load_tasks(asset_ids,pparent_ids);
    }else if(shot_ids){
        pparent_ids = seq_ids
        load_tasks(shot_ids,pparent_ids);
    }

}

function load_tasks(parent_ids,pparent_ids) {
    var task
    if (parent_ids.length == 1){ 
        task = 'Task'
    }else{
        task = 'Tasks'
    }

    data_ids = JSON.stringify(parent_ids);
    pparent_ids = JSON.stringify(pparent_ids);
    $.ajax({
        type:"POST",
        url:"/callajax/",
        data: { 'parent_ids': data_ids ,'object_name': task, 'pparent_ids' : pparent_ids },
        beforeSend: function(){
            $('#panel_big').plainOverlay('show');
        },
        success: function(json){
            $("#div_task_details").css({'display':'block'});
            for (parent_id in json){
                var mycol = [];
                var mycolusers = [];
                var task_id = [];
                $.each(json[parent_id], function (idx, obj) {
		    if (!mycol[0]){
			mycol[0] = obj.parent_name;
		    }
                    $('#tbl_task th').each(function(index) { 
                        var task_name = this.innerHTML;
                        if (obj.name == task_name){
                            task_id[index] = obj.id; 
                            mycol[index] = obj.status; 
                            mycolusers[index] = obj.users; 
                        }
                    });
                });
            add_rows(mycol,parent_id,mycolusers,task_id);
            }
            $('#panel_big').plainOverlay('hide');
        },
        error: function(error){
            console.log("Error:");
            console.log(error);
        }
    });
}
function editUserCell(context){

    var OriginalContent = $(context).text();
    OriginalContent = OriginalContent.split(',')[0]
    var row_stat = 'Users';
    
    var clone = $('#selectUsers').clone(true);
    clone.css({"background-color":"#444"});

    clone.val(OriginalContent).trigger("liszt:updated");
    clone.trigger("chosen:updated");
    $(context).html(clone.show("show"));

    clone.focus();
    clone.blur(function () {
        status_text = $(this).val(); 
        change_status(status_text,context,row_stat)
        change_multiple(status_text,context,row_stat);
    });

}

function editCell(context){

    var OriginalContent = $(context).text();
    var row_stat = 'Status';

    var clone = $('#selectStatus').clone(true);
    clone.css({"background-color":"#444"});

    clone.val(OriginalContent).trigger("liszt:updated");
    clone.trigger("chosen:updated");
    $(context).html(clone.show("show"));

    clone.focus();
    clone.blur(function () {
        status_text = $(this).val(); 
        change_status(status_text,context,row_stat)
        change_multiple(status_text,context,row_stat);
    });

}

function change_status(status_text,context,row_stat){

    org_val = $(context).attr('data-org-val');
    label = status_text.replace(/ /g,"_").toLowerCase();
    col_data = '<span class="label label-'+label+'">'+status_text+'</span>'
    if (row_stat == 'Users'){
        col_data = '<span class="label label-default">'+status_text+'</span>'
    }
    $(context).html(col_data);
    if (org_val == status_text){
        $(context).find('input:hidden[name=modifiedRow]').remove();
        if (!($(context).parent('tr').find('td input:hidden[name=modifiedRow]').length)){
            $(context).parent('tr').removeAttr('style');
        };
    }else{
        $(context).append('<input type="hidden" name="modifiedRow" value="'+row_stat+'" />');
        $(context).parent('tr').css({'background-color':'#52436F'});
        $("#save_changes").css({'background-color':'#52436F'});
    }

}

function change_multiple(status_text,context,row_stat){

    var idx = $(context).index();
    idx--;

    $('#tbl_task tr.selected').each(function(){
        cell = $(this).find('td:eq('+idx+')');
        change_status(status_text,cell,row_stat)
    });

}

$("#undo").click(function(){
    removeSelections();
});

function removeSelections(){

    $('#tbl_task td input:hidden[name=modifiedRow]').each(function(){
        row_stat = this.value;
        org_val = $(this).closest('td').attr('data-org-val');
        $("#save_changes").css({'background-color':'#555555'});
        $(this).parent().parent().removeAttr('style');

        label = org_val.replace(/ /g,"_").toLowerCase();
        col_data = '<span class="label label-'+label+'">'+org_val+'</span>'
        if(row_stat == 'Users'){
            col_data = '<span class="label label-default">'+org_val+'</span>'
        }
        $(this).parent().html(col_data);
    });
       $('#tbl_task tr.selected').each(function(){
                $(this).removeClass("selected");
        });
}


$("#save_changes").click(function(){

    var data_array = [];
    $('#tbl_task td input:hidden[name=modifiedRow]').each(function(){
        var row_stat = this.value;
        var valueToPush = [];
        var col=$(this).closest('td');
        var col_idx = col.index();
        var row=$(this).closest('tr');
        var row_val = col.attr('data-task-id');
        var th_name = col.attr('title');
        var row_note = col.attr('data-task-note');

        valueToPush[0] = col.text();
        valueToPush[1] = row_val;
        valueToPush[2] = th_name;
        valueToPush[3] = row_stat;
        valueToPush[4] = row_note;
        data_array.push(valueToPush);
        col.attr('data-org-val',col.text());
    });
    if (data_array.length != 0){ 
        save_changes(data_array); 
        removeSelections();
    }

});
function save_changes(data_array) {
    data = JSON.stringify(data_array);
    $.ajax({
        type:"POST",
        url:"/callajax/",
        data: { 'object_name': 'Save Changes', 'data_list': data},
        beforeSend: function(){
	    $('#panel_big').plainOverlay('show');
        },
        success: function(json){
            $.each(json, function (idx, obj) {
            });
        
            noty({
                text: 'Your changes were saved',
                layout: 'topCenter',
                closeWith: ['click', 'hover'],
                type: 'success'
            });
        },
        error: function(error){
            console.log("Error:");
            console.log(error);
        }
    });
    $('#panel_big').plainOverlay('hide');
}
$("#search").keyup(function(){
    _this = this;
    // Show only matching TR, hide rest of them
   if ($(this).val() === ''){
        $(this).css({"border-color": "#333"})
    }else{
        $(this).css({"border-color": "#5897fb"})
    }
    $.each($("#tbl_task tbody tr"), function(idx) {
        if($(this).text().toLowerCase().indexOf($(_this).val().toLowerCase()) === -1)
            $(this).hide();
        else
            $(this).show();                
        });
}); 

function demoFromHTML() {
    update()
}

function update() {
            var doc = new jsPDF();
            var elem = $('#tbl_task');
            var res = doc.autoTableHtmlToJson(elem);
            doc.autoTable(res.columns, res.data, {startY: 20});

        doc.save('table.pdf');
    }

function sortOrder(header){
    var table = $('#tbl_task');
    
    $(header)
        .wrapInner('<span title="sort this column"/>')
        .each(function(){
            
            var th = $(this),
                thIndex = th.index(),
                inverse = false;
            
            th.click(function(){
                
                table.find('td').filter(function(){
                    
                    return $(this).index() === thIndex;
                    
                }).sortElements(function(a, b){
                    
                    return $.text([a]) > $.text([b]) ?
                        inverse ? -1 : 1
                        : inverse ? 1 : -1;
                    
                }, function(){
                    
                    return this.parentNode; 
                    
                });
                
                inverse = !inverse;
                    
            });
                
        });
}

function toggle_note(param) {
    id = $(param).find('option:selected').attr('id');
    category = $(param).val();
    category = category.replace(/ /g,"_");
    cat_id = "category-"+category+"-"+id
    all_cat_id = "category-"
    $('[id^="'+cat_id+'"]').css({'display':'block'});
    $('[id^="'+all_cat_id+'"]').each(function(index){
        this_id = $(this).attr('id')
        var patt = new RegExp(cat_id);
        var match = patt.test(this_id);
        if (!match){
            $(this).css({"display":"none"});
        }
    })
}

function editArtistCell(context){

    var OriginalContent = $(context).text();
    OriginalContent = OriginalContent.replace(/^\s+/ig,'');
    OriginalContent = OriginalContent.replace(/\s+$/ig,'');
    var row_stat = 'Status';

    var task_id = $(context).attr('data-task-id');

    var clone = $('#selectStatus').clone(true);
    clone.css({"background-color":"#444"});

    clone.val(OriginalContent).trigger("liszt:updated");
    clone.trigger("chosen:updated");
    $(context).html(clone.show("show"));

    clone.focus();
    clone.blur(function () {
        status_text = $(this).val(); 
        change_status(status_text,context,row_stat);
        change_multiple(status_text,context,row_stat);
    });
}
function toggle_view(context){
    act_id = $(context).attr('id');
    id = act_id.split('-')[1]
    a_val = $(context).val();
    $('#reject_note-'+id).val('');
    $('#reject_note_accordion-'+id).fadeOut(350);
    $('#reject_notepad-'+id).fadeOut(350);
    if (a_val == 'View'){
	show_version_notes(context);
	$('#reject_note_accordion-'+id).fadeIn(350);
    }else if (a_val == 'Reject'){
	$('#reject_notepad-'+id).fadeIn(350);
    }
}
function toggle_linkview(context){
    act_id = $(context).attr('id');
    id = act_id.split('-')[1]
    a_val = $(context).val();
    $('#link_reject_note-'+id).val('');
    $('#link_reject_note_accordion-'+id).fadeOut(350);
    $('#link_reject_notepad-'+id).fadeOut(350);
    if (a_val == 'View'){
	show_linkversion_notes(context);
	$('#link_reject_note_accordion-'+id).fadeIn(350);
    }else if (a_val == 'Reject'){
	$('#link_reject_notepad-'+id).fadeIn(350);
    }
}
function show_versions(context){
    attr_id = $(context).attr('id');
    id = attr_id.split('-')[1]

    act_val = $('#selectView-'+id).val()
    dept_val = $('#selectDepartment-'+id).val()
    atype_val = $('#selectAssetType-'+id).val()

    if (dept_val == ''){
	alert("Please select department");
	return null;
    }else if (atype_val == ''){
	alert("Please select asset type");
	return null;
    }

    var col=$(context).closest('td');
    task_id = col.attr('data-task-id');
    
    $select_elem = $('#selectVersion-'+id)
    load_versions(task_id,dept_val,atype_val,$select_elem,'')

}

function show_linkversions(context){
    attr_id = $(context).attr('id');
    id = attr_id.split('-')[1];

    act_val = $('#selectLinkView-'+id).val();
    dept_val = $('#selectLinkDepartment-'+id).val();
    atype_val = $('#selectLinkAssetType-'+id).val();

    if (dept_val == ''){
	alert("Please select department");
	return null;
    }else if (atype_val == ''){
	alert("Please select asset type");
	return null;
    }

    build_val = $('#selectLinkDepartment-'+id).attr('data-asset-build');
    $select_elem = $('#selectLinkVersion-'+id)
    load_versions('',dept_val,atype_val,$select_elem,build_val)

}
function load_versions(task_id,dept,asset_type,$select_elem,asset_build) {
    $.ajax({
        type:"POST",
        url:"/callajax/",
        data: { 'task_id': task_id ,'object_name': 'Versions', 'asset_type': asset_type , 'department': dept, 'asset_build': asset_build},
        beforeSend: function(){
        },
        success: function(json){
	    $select_elem.empty();
	    $select_elem.append('<option value="">Select Version</option>');
            $.each(json, function (idx, obj) {
		$select_elem.append('<option value="'+obj.id+'">'+obj.name+'</option>');
            });
	    $select_elem.trigger("chosen:updated");
	    $select_elem.trigger("liszt:updated");
	    $select_elem.data("chosen").destroy().chosen();
        },
        error: function(error){
            console.log("Error:");
            console.log(error);
        }
    });
}

function show_version_notes(context){
    attr_id = $(context).attr('id');
    id = attr_id.split('-')[1]
    ver_id = $('#selectVersion-'+id).val();
    if (ver_id == ''){
	alert("Please select version !!");
	return null;
    }
    $('#reject_note_accordion-'+id).html('');
//    $('#reject_note_accordion-'+id).accordion();
    version_notes(ver_id,id);
}

function version_notes(ver_id,id) {
    $.ajax({
        type:"POST",
        url:"/callajax/",
        data: { 'object_name': 'Version Note', 'ver_id': ver_id},
        beforeSend: function(){
        },
        success: function(json){
            $.each(json, function (idx, obj) {
		add_version_notes(obj,id,idx);
            });
        },
        error: function(error){
            console.log("Error:");
            console.log(error);
        }
    });
}

function add_version_notes(obj,id,idx){

note_author = obj.note_author;
note_head = obj.note_head;
note_replies = obj.replies;
note_category = obj.note_category;
note_date = obj.note_date;
note_id = obj.note_id;
++idx;
pid = id
id = pid+'_'+idx;

notehead = '\
    <div class="panel panel-default" id="note_category-'+id+'">\
	<div class="panel-heading">\
	    <i class="glyphicon glyphicon-envelope"></i>&nbsp;&nbsp;\
	    <span class="label2 label-'+note_category+'">'+note_category+'</span>\
	    <a data-toggle="collapse" data-parent="#reject_note_accordion-'+pid+'" href="#note_collapse-'+id+'" style="text-decoration: none;">\
	    <span class="label label-default" style="width:63%">'+note_author+' : '+note_head+'</span></a>\
	    <span class="label2 label-info">'+note_date+'</span>\
	</div>\
    </div>\
';
notebody = '\
    <div id="note_collapse-'+id+'" class="panel-collapse collapse">\
	<div class="panel-body" style="padding: 0px;">\
	    <div class="box" style="overflow:auto; height:195px; margin: 10px;">';
    replies = '';
    for (index in note_replies){
	replies = replies + '<p>'+note_replies[index]+'</p>';
    }
body2 = replies + '\
	    </div>\
';

notetail = '\
    <div id="reject_notepad-'+id+'" style="display:block">\
        <div class="box" style="margin: 10px;">\
            <table>\
                <tr>\
                    <td>\
                        <textarea cols=90 rows=2 data-note-id="'+note_id+'" id="reply_ver_note_text-'+id+'" required="" style="color:black;"></textarea>\
                    </td>\
                    <td>\
                        <button id="reply_ver_note-'+id+'" class="btn btn-inverse btn-default btn-lg" onclick="reply_ver_note(this)">Reply</button>\
                    </td>\
                </tr>\
            </table>\
        </div>\
    </div>\
';
notetailend = '\
    </div>\
</div>\
';
$('#reject_note_accordion-'+pid).append(notehead+notebody+body2+notetail+notetailend);
}

function reply_ver_note(context){

    attr_id = $(context).attr('id');
    id = attr_id.split('-')[1];
    reply_text = $('#reply_ver_note_text-'+id).val();
    if (reply_text == ''){
	alert("Give some reply !!!");
	return null;
    }
    note_id = $('#reply_ver_note_text-'+id).attr('data-note-id');
    reply_note(reply_text,note_id);
    $('#reply_ver_note_text-'+id).val('');
    location.reload();
}

function show_linkversion_notes(context){
    attr_id = $(context).attr('id');
    id = attr_id.split('-')[1]
    ver_id = $('#selectLinkVersion-'+id).val();
    if (ver_id == ''){
	alert("Please select version !!");
	return null;
    }
    $('#link_reject_note_accordion-'+id).html('');
    link_version_notes(ver_id,id);
}

function link_version_notes(ver_id,id) {
    $.ajax({
        type:"POST",
        url:"/callajax/",
        data: { 'object_name': 'Version Note', 'ver_id': ver_id},
        beforeSend: function(){
        },
        success: function(json){
            $.each(json, function (idx, obj) {
		add_linkversion_notes(obj,id,idx);
            });
        },
        error: function(error){
            console.log("Error:");
            console.log(error);
        }
    });
}

function add_linkversion_notes(obj,id,idx){

note_author = obj.note_author;
note_head = obj.note_head;
note_replies = obj.replies;
note_category = obj.note_category;
note_date = obj.note_date;
note_id = obj.note_id;
++idx;
pid = id
id = pid+'_'+idx;

notehead = '\
    <div class="panel panel-default" id="link_note_category-'+id+'">\
	<div class="panel-heading">\
	    <i class="glyphicon glyphicon-envelope"></i>&nbsp;&nbsp;\
	    <span class="label2 label-'+note_category+'">'+note_category+'</span>\
	    <a data-toggle="collapse" data-parent="#link_reject_note_accordion-'+pid+'" href="#link_note_collapse-'+id+'" style="text-decoration: none;">\
	    <span class="label label-default" style="width:63%">'+note_author+' : '+note_head+'</span></a>\
	    <span class="label2 label-info">'+note_date+'</span>\
	</div>\
    </div>\
';
notebody = '\
    <div id="link_note_collapse-'+id+'" class="panel-collapse collapse">\
	<div class="panel-body" style="padding: 0px;">\
	    <div class="box" style="overflow:auto; height:195px; margin: 10px;">';
    replies = '';
    for (index in note_replies){
	replies = replies + '<p>'+note_replies[index]+'</p>';
    }
body2 = replies + '\
	    </div>\
';

notetail = '\
    <div id="link_reject_notepad-'+id+'" style="display:block">\
        <div class="box" style="margin: 10px;">\
            <table>\
                <tr>\
                    <td>\
                        <textarea cols=90 rows=2 data-note-id="'+note_id+'" id="link_reply_ver_note_text-'+id+'" required="" style="color:black;"></textarea>\
                    </td>\
                    <td>\
                        <button id="link_reply_ver_note-'+id+'" class="btn btn-inverse btn-default btn-lg" onclick="link_reply_ver_note(this)">Reply</button>\
                    </td>\
                </tr>\
            </table>\
        </div>\
    </div>\
';
notetailend = '\
    </div>\
</div>\
';
$('#link_reject_note_accordion-'+pid).append(notehead+notebody+body2+notetail+notetailend);
}

function link_reply_ver_note(context){

    attr_id = $(context).attr('id');
    id = attr_id.split('-')[1];
    reply_text = $('#link_reply_ver_note_text-'+id).val();
    if (reply_text == ''){
	alert("Give some reply !!!");
	return null;
    }
    note_id = $('#link_reply_ver_note_text-'+id).attr('data-note-id');
    reply_note(reply_text,note_id);
    $('#link_reply_ver_note_text-'+id).val('');
    location.reload();
}

function reply_note(reply_text,note_id) {
    $.ajax({
        type:"POST",
        url:"/callajax/",
        data: { 'object_name': 'Reply Note', 'note_id': note_id, 'reply_text': reply_text},
        beforeSend: function(){
        },
        success: function(json){
            $.each(json, function (idx, obj) {
            });
        
            noty({
                text: 'Reply has been given ...',
                layout: 'topCenter',
                closeWith: ['click', 'hover'],
                type: 'success'
            });
        },
        error: function(error){
            console.log("Error:");
            console.log(error);
        }
    });
}
function add_note(context){

    attr_id = $(context).attr('id');
    id = attr_id.split('-')[1]
    ver_id = $('#selectVersion-'+id).val();
    note = $('#reject_note-'+id).val();
    if (ver_id == ''){
	alert("Please select version !!");
	return null;
    }
    if (note == ''){
	alert("Note is empty !!");
	return null;
    }
    var col = $('#selectVersion-'+id).closest('td');
    task_name =	col.attr('data-task-name');
    note = task_name+' : '+note;
    save_note(note,ver_id);
    $('#reject_notepad-'+id).fadeOut(350);
}

function add_linknote(context){

    attr_id = $(context).attr('id');
    id = attr_id.split('-')[1]
    ver_id = $('#selectLinkVersion-'+id).val();
    note = $('#link_reject_note-'+id).val();
    if (ver_id == ''){
	alert("Please select version !!");
	return null;
    }
    if (note == ''){
	alert("Note is empty !!");
	return null;
    }
    var col = $('#selectLinkVersion-'+id).closest('td');
    task_name =	col.attr('data-task-name');
    note = task_name+' : '+note;
    save_note(note,ver_id);
    $('#link_reject_notepad-'+id).fadeOut(350);
}
function save_note(note,ver_id) {
    $.ajax({
        type:"POST",
        url:"/callajax/",
        data: { 'object_name': 'User Note', 'note': note, 'ver_id': ver_id},
        beforeSend: function(){
        },
        success: function(json){
            $.each(json, function (idx, obj) {
            });
        
            noty({
                text: 'Note has been posted',
                layout: 'topCenter',
                closeWith: ['click', 'hover'],
                type: 'success'
            });
        },
        error: function(error){
            console.log("Error:");
            console.log(error);
        }
    });
}

$(function() {

    $('[data-popup-open]').on('click', function(e)  {
        var targeted_popup_class = jQuery(this).attr('data-popup-open');
        $('[data-popup="' + targeted_popup_class + '"]').fadeIn(350);
        e.preventDefault();
    });


    $('[data-popup-close]').on('click', function(e)  {
        var targeted_popup_class = jQuery(this).attr('data-popup-close');
        $('[data-popup="' + targeted_popup_class + '"]').fadeOut(350);

        e.preventDefault();
    });
});

$('#selectProject').change(function(){
    var proj_id = $("#selectProject").val();
    if (!proj_id){
        alert("Please select valid project !!");
        return null;
    }
    $('#all_ftp_shots').attr('checked',false);
    var obj_name = 'FtpSequence';
    load_obj_name(obj_name,'');
});


$('#selectFtpSequence').on('change', function(evt, params) {

    var status_name = $("#selectFtpStatus").val();
    if (!status_name){
        alert("Please select valid Status !!")
        return null
    }
    var task_name = $("#selectFtpDepartment").val();
    if (!task_name){
        alert("Please select valid Department !!")
        return null
    }
    var deselectedValue = params.deselected;
    var selectedValue = params.selected;

    if (selectedValue){
        var obj_name = 'FtpShot';
        load_obj_name(obj_name,selectedValue);
    }else if (deselectedValue){
        de_seq = $("#selectFtpSequence option[value='"+deselectedValue+"']").text();
        $("#selectFtpShot option:contains('"+de_seq+"')").remove();
        $("#selectFtpShot").trigger("chosen:updated");
        $("#selectFtpShot").trigger("liszt:updated");
//        $("#tbl_task tr:contains("+ de_seq +")").remove();
    }
});

$('#selectFtpAssetName').change(function(){

    $select_elem = $('#selectFtpExt');
    $select_elem.empty();
    $("#extended_div").css("display", "block");

    $('#selectFtpVersionSide').val('').trigger("liszt:updated").trigger("chosen:updated");
    asset_name = $(this).val();
    if (!asset_name){
	alert("Please select valid asset name !!!");
	$('#div_ext_name').css({'display':'none'});
	return null;
    }
    $('#div_ext_name').css({'display':'block'})
    if (asset_name == 'final') {
        $select_elem.append('<option value="">Select Ext.</option>');
        $select_elem.append('<option value="dpx">dpx</option>');
        $select_elem.append('<option value="jpg">jpg</option>');
	$('#selectFtpVersionSide').val('both').trigger("liszt:updated").trigger("chosen:updated");
    }else if (asset_name == 'sequence') {
        $select_elem.append('<option value="mov" selected>mov</option>');
    }else if (asset_name == 'static') {
        $select_elem.append('<option value="jpg" selected>jpg</option>');
    }
    $select_elem.trigger("chosen:updated");
    $select_elem.trigger("liszt:updated");
    $select_elem.data("chosen").destroy().chosen();	

});

function show_upload_version(){

    proj = $('#selectProject').val();
    stat = $('#selectFtpStatus').val();
    dept = $('#selectFtpDepartment').val();
    seq = $('#selectFtpSequence').val();
    shot = $('#selectFtpShot').val();
    ass = $('#selectFtpAssetName').val();
    ext = $('#selectFtpExt').val();
    side = $('#selectFtpVersionSide').val();
    copy_opt = $('input[name="optradio"]:checked').val();
    dest_path = $('#dest_path').val();
    dest_path = dest_path.replace(/\s/g,'');
   
    $('#tbl_ftp_version tbody').empty();
    if (!proj){
	alert("Please select project !!!");
	return null;
    } else if (!stat){
	alert("Please select status !!!");
	return null;
    } else if (!dept){
	alert("Please select department !!!");
	return null;
    } else if (!seq){
	alert("Please select Sequence !!!");
	return null;
    } else if (!shot){
	alert("Please select shot !!!");
	return null;
    } else if (!ass){
	alert("Please select asset name !!!");
	return null;
    } else if (!ext){
	alert("Please select Extension !!!");
	return null;
    } else if (!side){
	alert("Please select side !!!");
	return null;
    }
//    else if (!copy_opt){
//	alert("Please check copy or symlink !!!");
//	return null;
//    }
    else if (!dest_path){
	alert("Please valid destination path !!!");
	return null;
    }

    var data_array = [];
    proj_name = $("#selectProject option[value='"+proj+"']").text();
    for (i in shot){
	value = shot[i];
	shot_name = $("#selectFtpShot option[value='"+value+"']").text();
	str_ver = proj_name+'_'+shot_name+':'+value+'_'+stat+'_'+dept+'_'+ass+'_'+ext+'_'+side;
	data_array.push(str_ver);
    }
    load_ftp_versions(data_array);
}


function load_ftp_versions(data_array) {

    data_array = JSON.stringify(data_array);
    $.ajax({
        type:"POST",
        url:"/callajax/",
        data: { 'data_array': data_array ,'object_name': 'FTP Versions' },
        beforeSend: function(){
//            $('#panel_big').plainOverlay('show');
        },
        success: function(json){
                $.each(json, function (idx, obj) {
		    add_version_rows(idx, obj);
                });
//            $('#panel_big').plainOverlay('hide');
        },
        error: function(error){
            console.log("Error:");
            console.log(error);
        }
    });
}

function add_version_rows(idx,obj){

    var obj_name = $("#selectObject").val();
    var table = $('#tbl_ftp_version tbody');
    row = $(table[0].insertRow(-1));
    ver = obj.version
//    updated_version = ver+
    camera_angle = obj.camera_angle
    files = obj.files
    ass = $('#selectFtpAssetName').val();
    shot_name = obj.shot_name
    upload_status = obj.status
    approved_version_number = obj.approved_version_number
    trimmed_version = obj.trimmed_version
    linked_path = obj.linked_path
    version_id = obj.version_id

    check_box = ''
    list_ver = ver.split(',')
    if (list_ver.length > 1){
	check_box = '<input type="checkbox" id="cb'+idx+'" disabled/>';
    }else{
	check_box = '<input type="checkbox" id="cb'+idx+'" data-td-ver = "'+ver+':'+approved_version_number+':'+version_id+'"/>';
    }
    ver_files = files.replace(/,/g, "</br>"); 
    version = ver.replace(/,/g, "</br>"); 

    var cell = $("<td id='check_box_1'>"+check_box+"</td><td>"+shot_name+"</td><td>"+trimmed_version+"</td><td>"+ass+"_"+"v"+approved_version_number+"<td>"+upload_status+"</td>");
    row.append(cell);

}

$('#upload_ftp').click(function(){
    var ftp_version = []
    side = $('#selectFtpVersionSide').val();
//    copy_opt = $('input[name="optradio"]:checked').val();
    copy_opt = 'symlink'
    dest_path = $('#dest_path').val();
    dest_path = dest_path.replace(/\s/g,'');
    var listy = []
    if (dest_path.slice(0,2) == 'Z:'){
        var dest_path_1 = dest_path.split('\\');
    }
    else {
        var dest_path_1 = dest_path.split('/');

    }

    $('tbody tr td input[type="checkbox"]').each(function(){
	if($(this).prop('checked')){
	    ftp_version.push($(this).attr('data-td-ver'));
	}
    });
    $('tbody tr td input[type="checkbox"]').each(function(){
	if($(this).prop('checked')){
	    upload_files(ftp_version,side,copy_opt,dest_path_1)
	}
	else{
	    alert("Select files after clicking on 'Show' button")
	}
    });

//    upload_files(ftp_version,side,copy_opt,dest_path_1)
});


function upload_files(data_array,side,copy_opt,dest_path) {
    data_dest = JSON.stringify(dest_path);
    data_array = JSON.stringify(data_array);
    $.ajax({
        type:"POST",
        url:"/callajax/",
        data: { 'data_array': data_array ,'object_name': 'FTP Upload', 'destination':data_dest, 'prefer':copy_opt, 'side':side },
        beforeSend: function(){
//            $('#panel_big').plainOverlay('show');
        },
        success: function(json){
		var status_ver = '';
                $.each(json, function (idx, obj) {
		    status_ver = obj.status;
                });
//            $('#panel_big').plainOverlay('hide');
                    noty({
                            text: status_ver,
                            layout: 'topCenter',
                            closeWith: ['click', 'hover'],
                            type: 'success'
			});
//		setTimeout(location.reload.bind(location), 3500);
        },
        error: function(error){
            console.log("Error:");
            console.log(error);
        }
    });
}


$('#allftpcb').change(function(){
    if($(this).prop('checked')){
        $('tbody tr td input[type="checkbox"]').each(function(){
            $(this).prop('checked', true);
        });
    }else{
        $('tbody tr td input[type="checkbox"]').each(function(){
            $(this).prop('checked', false);
        });
    }
});

