"""
Django settings for atomTrack project.

Generated by 'django-admin startproject' using Django 1.10.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
import ldap
import logging
from django_auth_ldap.config import LDAPSearch, PosixGroupType
import mongoengine
from socket import socket, AF_INET, SOCK_DGRAM
from subprocess import check_output

AUTHENTICATION_BACKENDS = (
    'django_auth_ldap.backend.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend',
)

# Database
DBNAME = 'atomTrack'

# Baseline configuration.
AUTH_LDAP_SERVER_URI = "ldap://192.168.1.2"
AUTH_LDAP_BIND_DN = ""
AUTH_LDAP_BIND_PASSWORD = ""
AUTH_LDAP_USER_DN_TEMPLATE = "uid=%(user)s,ou=People,dc=intra,dc=madassemblage,dc=com"

# Enable debug for ldap server connection
logger = logging.getLogger('django_auth_ldap')
logger.addHandler(logging.StreamHandler())
logger.setLevel(logging.DEBUG)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

PROJ_BASE_DIR = BASE_DIR + '/atomTrack'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "atomTrack/static"),
)
LOG_FILE = os.path.join(BASE_DIR, 'logs/atom.log')
# STATIC_ROOT = os.path.join(BASE_DIR, "atomTrack/static/")
# MEDIA_ROOT = os.path.join(BASE_DIR, "atomTrack/media/")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '7tp!_4)k6ev_1&=%pyc@%()0kp5h&-ynvas-!y49oq-(9!n4t)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
DEVMODE = False

ALLOWED_HOSTS = ['192.168.1.20', '127.0.0.1', '192.168.1.109', 'atom.intra.madassemblage.com', '192.168.1.97', '192.168.1.99',
                 'atom', '10.11.7.240']

try:
    ips = check_output(['hostname', '--all-ip-addresses'])
    ip_address = ips.strip()
    # self.ipaddress = gethostbyname(self.machinename)
except ValueError:
    ip_address = '127.0.0.1'

if ip_address not in ['192.168.1.97']:
    DEVMODE = True

MONGO_SERVER = '192.168.1.99'
MONGO_DB = 'userDailyBackupTask'
FTRACK_URL = 'http://192.168.1.98' 

if DEVMODE:
    MONGO_SERVER = '192.168.1.97'
    FTRACK_URL = 'http://192.168.1.99' 

mongoengine.connect(db=MONGO_DB,host=MONGO_SERVER,connect=False)
# Application definition

INSTALLED_APPS = [
    #    'fileupload.apps.FileuploadConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'atom',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #    'django.middleware.csrf.CsrfViewMiddleware',
    #    'response_timeout.middleware.SetCacheTimeoutMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR + '/atomTrack/templates/',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries': {  # Adding this section should work around the issue.
                #                'app_tags' : 'myapp.templatetags.app_tags',#to add new tags module,
                #                'upload_tags' : 'myapp.templatetags.upload_tags',#to add new tags module,
            },
        },
    },
]

WSGI_APPLICATION = 'wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': 'db.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
